
{b64find} = require '../..'

corpus = """
g6Rib2R5hqhkZXRhY2hlZMOpaGFzaF90eXBlCqNrZXnEIwEgMnetRTUoE40n8GY8OMnSM4qkVTdJ5bXG
oLpTdjWgNqcKp3BheWxvYWTFAvd7ImJvZHkiOnsia2V5Ijp7ImVsZGVzdF9raWQiOiIwMTIwMzI3N2Fk
NDUzNTI4MTM4ZDI3ZjA2NjNjMzhjOWQyMzM4YWE0NTUzNzQ5ZTViNWM2YTBiYTUzNzYzNWEwMzZhNzBh
IiwiaG9zdCI6ImtleWJhc2UuaW8iLCJraWQiOiIwMTIwMzI3N2FkNDUzNTI4MTM4ZDI3ZjA2NjNjMzhj
OWQyMzM4YWE0NTUzNzQ5ZTViNWM2YTBiYTUzNzYzNWEwMzZhNzBhIiwidWlkIjoiNmQ0YTY1NWVhMTQ1
YTQwNzI2YjY5YjhmMTllNjI5MTkiLCJ1c2VybmFtZSI6Imphc29uY29vbWJzY2VvIn0sInNlcnZpY2Ui
OnsibmFtZSI6ImdpdGh1YiIsInVzZXJuYW1lIjoicHVibGljc3RhcnR1cCJ9LCJ0eXBlIjoid2ViX3Nl
cnZpY2VfYmluZGluZyIsInZlcnNpb24iOjF9LCJjbGllbnQiOnsibmFtZSI6ImtleWJhc2UuaW8gZ28g
Y2xpZW50IiwidmVyc2lvbiI6IjEuMC43In0sImN0aW1lIjoxNDUxNTQyMjM3LCJleHBpcmVfaW4iOjUw
NDU3NjAwMCwibWVya2xlX3Jvb3QiOnsiY3RpbWUiOjE0NTE1NDIyMjcsImhhc2giOiJmZjU4ZDc5MmMz
YjgzMjVlOWZiMzNiNmNkNzA4NTBhMmE4MGQ0NWI0ODVhZDNlNWZlMTIxYWY4OGQ0OGJkMzg2OTcyNWIy
MTQ4ZGEyNzFkMTVhM2RhYzFjYzlmNTdlNWIyNzM4ZDMzMmFhMTc2NWNlNWQ0ZWY4MDVjNDk1MGY5NCIs
InNlcW5vIjozNDA2MzV9LCJwcmV2IjoiNTc3YmE0N2Y5YjE5ODI2NmI2NmM1MTE3ZTY2ZmQ1OTgwMGE2
MzU4NGQ3NjRlOThkYzIxN2IyOWNiY2M4OGI1MiIsInNlcW5vIjoxNiwidGFnIjoic2lnbmF0dXJlIn2j
c2lnxEC6tw5+PA7o7Yplpg9dQv+XLYPvbXlf3JcXK0P4D05HkC1NxU5GjPY6+haOB5nx25SKCwWRkaHb
DesQ+W+qH0IOqHNpZ190eXBlIKN0YWfNAgKndmVyc2lvbgE=
"""

needle = new Buffer "g6Rib2R5hqhkZXRhY2hlZMOpaGFzaF90eXBlCqNrZXnEIwEgMnetRTUoE40n8GY8OMnSM4qkVTdJ5bXGoLpTdjWgNqcKp3BheWxvYWTFAvd7ImJvZHkiOnsia2V5Ijp7ImVsZGVzdF9raWQiOiIwMTIwMzI3N2FkNDUzNTI4MTM4ZDI3ZjA2NjNjMzhjOWQyMzM4YWE0NTUzNzQ5ZTViNWM2YTBiYTUzNzYzNWEwMzZhNzBhIiwiaG9zdCI6ImtleWJhc2UuaW8iLCJraWQiOiIwMTIwMzI3N2FkNDUzNTI4MTM4ZDI3ZjA2NjNjMzhjOWQyMzM4YWE0NTUzNzQ5ZTViNWM2YTBiYTUzNzYzNWEwMzZhNzBhIiwidWlkIjoiNmQ0YTY1NWVhMTQ1YTQwNzI2YjY5YjhmMTllNjI5MTkiLCJ1c2VybmFtZSI6Imphc29uY29vbWJzY2VvIn0sInNlcnZpY2UiOnsibmFtZSI6ImdpdGh1YiIsInVzZXJuYW1lIjoicHVibGljc3RhcnR1cCJ9LCJ0eXBlIjoid2ViX3NlcnZpY2VfYmluZGluZyIsInZlcnNpb24iOjF9LCJjbGllbnQiOnsibmFtZSI6ImtleWJhc2UuaW8gZ28gY2xpZW50IiwidmVyc2lvbiI6IjEuMC43In0sImN0aW1lIjoxNDUxNTQyMjM3LCJleHBpcmVfaW4iOjUwNDU3NjAwMCwibWVya2xlX3Jvb3QiOnsiY3RpbWUiOjE0NTE1NDIyMjcsImhhc2giOiJmZjU4ZDc5MmMzYjgzMjVlOWZiMzNiNmNkNzA4NTBhMmE4MGQ0NWI0ODVhZDNlNWZlMTIxYWY4OGQ0OGJkMzg2OTcyNWIyMTQ4ZGEyNzFkMTVhM2RhYzFjYzlmNTdlNWIyNzM4ZDMzMmFhMTc2NWNlNWQ0ZWY4MDVjNDk1MGY5NCIsInNlcW5vIjozNDA2MzV9LCJwcmV2IjoiNTc3YmE0N2Y5YjE5ODI2NmI2NmM1MTE3ZTY2ZmQ1OTgwMGE2MzU4NGQ3NjRlOThkYzIxN2IyOWNiY2M4OGI1MiIsInNlcW5vIjoxNiwidGFnIjoic2lnbmF0dXJlIn2jc2lnxEC6tw5+PA7o7Yplpg9dQv+XLYPvbXlf3JcXK0P4D05HkC1NxU5GjPY6+haOB5nx25SKCwWRkaHbDesQ+W+qH0IOqHNpZ190eXBlIKN0YWfNAgKndmVyc2lvbgE=", 'base64'

exports.test_find = (T,cb) ->
  T.assert b64find corpus, needle
  T.assert not b64find("ABB" + corpus, needle)
  T.assert b64find("\n\nABBCCC\n\nCCCCC\n\n#{corpus}\nEEEEE===\nFFFFF==\n", needle)
  T.assert b64find(corpus.split(/\n/).join(""), needle)
  cb()
