// Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var Env, RunMode, SRV, Strictness, constants, log, make_email, make_full_username, _env, _ref;

  constants = require('./constants');

  _ref = require('./util'), make_email = _ref.make_email, make_full_username = _ref.make_full_username;

  SRV = constants.server;

  log = require('iced-logger');

  RunMode = (function() {
    RunMode.prototype.DEVEL = 0;

    RunMode.prototype.PROD = 1;

    function RunMode(s) {
      var m, t, _ref1;
      t = {
        devel: this.DEVEL,
        prod: this.PROD
      };
      _ref1 = (s != null) && ((m = t[s]) != null) ? [m, s, true] : [this.PROD, "prod", false], this._v = _ref1[0], this._name = _ref1[1], this._chosen = _ref1[2];
    }

    RunMode.prototype.is_devel = function() {
      return this._v === this.DEVEL;
    };

    RunMode.prototype.is_prod = function() {
      return this._v === this.PROD;
    };

    RunMode.prototype.toString = function() {
      return this._name;
    };

    RunMode.prototype.chosen = function() {
      return this._chosen;
    };

    return RunMode;

  })();

  Strictness = (function() {
    Strictness.prototype.NONE = 0;

    Strictness.prototype.SOFT = 1;

    Strictness.prototype.STRICT = 2;

    function Strictness(s, def) {
      var m, t, _chosen, _ref1;
      if (def == null) {
        def = "soft";
      }
      t = {
        none: this.NONE,
        soft: this.SOFT,
        strict: this.STRICT
      };
      _ref1 = (s != null) && ((m = t[s]) != null) ? [m, s, true] : [t[def], def, false], this._v = _ref1[0], this._name = _ref1[1], _chosen = _ref1[2];
    }

    Strictness.prototype.is_soft = function() {
      return this._v === this.SOFT;
    };

    Strictness.prototype.is_none = function() {
      return this._v === this.NONE;
    };

    Strictness.prototype.is_strict = function() {
      return this._v === this.STRICT;
    };

    Strictness.prototype.toString = function() {
      return this._name;
    };

    Strictness.prototype.chosen = function() {
      return this._chosen;
    };

    return Strictness;

  })();

  Env = (function() {
    function Env() {
      this.config = null;
      this.kvstore = null;
    }

    Env.prototype.open_config_file = function(opts, cb) {
      return cb(null);
    };

    Env.prototype.config_logger = function() {
      var p;
      p = log["package"]();
      if (this.get_debug()) {
        p.env().set_level(p.DEBUG);
      } else if (this.get_quiet()) {
        p.env().set_level(p.ERROR);
      }
      if (this.get_no_color()) {
        return p.env().set_use_color(false);
      }
    };

    Env.prototype.get_opt = function(_arg) {
      var co, config, dflt, _ref1;
      config = _arg.config, dflt = _arg.dflt;
      co = (_ref1 = this.config) != null ? _ref1.get_obj() : void 0;
      return ((co != null) && (typeof config === "function" ? config(co) : void 0)) || (typeof dflt === "function" ? dflt() : void 0) || null;
    };

    Env.prototype.get_port = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return c != null ? (_ref1 = c.server) != null ? _ref1.port : void 0 : void 0;
        },
        dflt: function() {
          return SRV.port;
        }
      });
    };

    Env.prototype.get_host = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.server) != null ? _ref1.host : void 0;
        },
        dflt: function() {
          return SRV.host;
        }
      });
    };

    Env.prototype.get_debug = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.run) != null ? _ref1.d : void 0;
        },
        dflt: function() {
          return false;
        }
      });
    };

    Env.prototype.get_quiet = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.run) != null ? _ref1.quiet : void 0;
        },
        dflt: function() {
          return false;
        }
      });
    };

    Env.prototype.get_no_tls = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.server) != null ? _ref1.no_tls : void 0;
        },
        dflt: function() {
          return SRV.no_tls;
        }
      });
    };

    Env.prototype.get_api_uri_prefix = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.server) != null ? _ref1.api_uri_prefix : void 0;
        },
        dflt: function() {
          return SRV.api_uri_prefix;
        }
      });
    };

    Env.prototype.get_run_mode = function() {
      var raw;
      if (!this._run_mode) {
        raw = this.get_opt({
          config: function(c) {
            var _ref1;
            return (_ref1 = c.run) != null ? _ref1.mode : void 0;
          },
          dflt: null
        });
        this._run_mode = new RunMode(raw);
      }
      return this._run_mode;
    };

    Env.prototype.get_username = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.user) != null ? _ref1.name : void 0;
        },
        dflt: function() {
          return null;
        }
      });
    };

    Env.prototype.is_me = function(u2) {
      return (u2 != null) && (u2.toLowerCase() === this.get_username().toLowerCase());
    };

    Env.prototype.get_uid = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.user) != null ? _ref1.id : void 0;
        },
        dflt: function() {
          return null;
        }
      });
    };

    Env.prototype.get_email = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.user) != null ? _ref1.email : void 0;
        },
        dflt: function() {
          return null;
        }
      });
    };

    Env.prototype.get_proxy = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.proxy) != null ? _ref1.url : void 0;
        },
        dflt: function() {
          return null;
        }
      });
    };

    Env.prototype.get_proxy_ca_certs = function() {
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return (_ref1 = c.proxy) != null ? _ref1.ca_certs : void 0;
        },
        dflt: function() {
          return null;
        }
      });
    };

    Env.prototype.get_merkle_checks = function() {
      var raw;
      if (!this._merkle_mode) {
        raw = this.get_opt({
          config: function(c) {
            return c.merkle_checks;
          },
          dflt: function() {
            return false;
          }
        });
        this._merkle_mode = new Strictness(raw, (this.is_test() ? 'strict' : 'soft'));
      }
      return this._merkle_mode;
    };

    Env.prototype.get_merkle_key_fingerprints = function() {
      var split;
      split = function(x) {
        if (x != null) {
          return x.split(/:,/);
        } else {
          return null;
        }
      };
      return this.get_opt({
        config: function(c) {
          var _ref1;
          return c != null ? (_ref1 = c.keys) != null ? _ref1.merkle : void 0 : void 0;
        },
        dflt: (function(_this) {
          return function() {
            if (_this.is_test()) {
              return constants.testing_keys.merkle;
            } else {
              return constants.keys.merkle;
            }
          };
        })(this)
      });
    };

    Env.prototype.get_no_color = function() {
      return this.get_opt({
        config: function(c) {
          return c.no_color;
        },
        dflt: function() {
          return false;
        }
      });
    };

    Env.prototype.is_configured = function() {
      return this.get_username() != null;
    };

    Env.prototype.is_test = function() {
      var _ref1;
      return (this.get_run_mode().is_devel()) || ((_ref1 = this.get_host()) === 'localhost' || _ref1 === '127.0.0.1');
    };

    Env.prototype.keybase_email = function() {
      return make_email(this.get_username());
    };

    Env.prototype.keybase_full_username = function() {
      return make_full_username(this.get_username());
    };

    return Env;

  })();

  _env = null;

  exports.init_env = function(a) {
    return _env = new Env;
  };

  exports.env = function() {
    return _env;
  };

}).call(this);
