// Generated by IcedCoffeeScript 1.7.1-g
(function() {
  var Finder, bufeq_fast;

  bufeq_fast = require('pgp-utils').util.bufeq_fast;

  Finder = (function() {
    function Finder(corpus) {
      this.rxx = new RegExp('\\s*(([a-zA-Z0-9/+_-]+)(={0,3}))\\s*$');
      this.lines = corpus.split(/\r*\n/);
    }

    Finder.prototype.find_one_block = function(start) {
      var found, i, line, ln_out, m, parts, _i, _len, _ref;
      found = false;
      ln_out = start;
      parts = [];
      _ref = this.lines.slice(start);
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        line = _ref[i];
        ln_out++;
        if ((m = line.match(this.rxx)) != null) {
          found = true;
          parts.push(m[1]);
          if (m[3].length > 0) {
            ln_out++;
            break;
          }
        } else if (found) {
          break;
        }
      }
      return [parts.join(""), ln_out];
    };

    Finder.prototype.find = function(needle) {
      var buf, e, i, msg, _ref;
      i = 0;
      while (i < this.lines.length) {
        _ref = this.find_one_block(i), msg = _ref[0], i = _ref[1];
        if (msg.length) {
          try {
            buf = new Buffer(msg, 'base64');
            if (bufeq_fast(buf, needle)) {
              return true;
            }
          } catch (_error) {
            e = _error;
          }
        }
      }
      return false;
    };

    return Finder;

  })();

  exports.b64find = function(haystack, needle) {
    return (new Finder(haystack)).find(needle);
  };

}).call(this);
